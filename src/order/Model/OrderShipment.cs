/*
 * order Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = order.Client.OpenAPIDateConverter;

namespace order.Model
{
    /// <summary>
    /// OrderShipment
    /// </summary>
    [DataContract(Name = "orderShipment")]
    public partial class OrderShipment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderShipment" /> class.
        /// </summary>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="orderId">orderId.</param>
        /// <param name="id">id.</param>
        /// <param name="status">status.</param>
        /// <param name="items">items.</param>
        /// <param name="address">address.</param>
        /// <param name="fromAddress">fromAddress.</param>
        /// <param name="returnAddress">returnAddress.</param>
        /// <param name="tracking">tracking.</param>
        /// <param name="returnTracking">returnTracking.</param>
        public OrderShipment(DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime), string orderId = default(string), string id = default(string), string status = default(string), List<OrderShipmentItem> items = default(List<OrderShipmentItem>), OrderPostalAddress address = default(OrderPostalAddress), OrderPostalAddress fromAddress = default(OrderPostalAddress), OrderPostalAddress returnAddress = default(OrderPostalAddress), List<ShipmentTracking> tracking = default(List<ShipmentTracking>), List<ShipmentTracking> returnTracking = default(List<ShipmentTracking>))
        {
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.OrderId = orderId;
            this.Id = id;
            this.Status = status;
            this.Items = items;
            this.Address = address;
            this.FromAddress = fromAddress;
            this.ReturnAddress = returnAddress;
            this.Tracking = tracking;
            this.ReturnTracking = returnTracking;
        }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updatedAt", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name = "orderId", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<OrderShipmentItem> Items { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", EmitDefaultValue = false)]
        public OrderPostalAddress Address { get; set; }

        /// <summary>
        /// Gets or Sets FromAddress
        /// </summary>
        [DataMember(Name = "fromAddress", EmitDefaultValue = false)]
        public OrderPostalAddress FromAddress { get; set; }

        /// <summary>
        /// Gets or Sets ReturnAddress
        /// </summary>
        [DataMember(Name = "returnAddress", EmitDefaultValue = false)]
        public OrderPostalAddress ReturnAddress { get; set; }

        /// <summary>
        /// Gets or Sets Tracking
        /// </summary>
        [DataMember(Name = "tracking", EmitDefaultValue = false)]
        public List<ShipmentTracking> Tracking { get; set; }

        /// <summary>
        /// Gets or Sets ReturnTracking
        /// </summary>
        [DataMember(Name = "returnTracking", EmitDefaultValue = false)]
        public List<ShipmentTracking> ReturnTracking { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderShipment {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  FromAddress: ").Append(FromAddress).Append("\n");
            sb.Append("  ReturnAddress: ").Append(ReturnAddress).Append("\n");
            sb.Append("  Tracking: ").Append(Tracking).Append("\n");
            sb.Append("  ReturnTracking: ").Append(ReturnTracking).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
