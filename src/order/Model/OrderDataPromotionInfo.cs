/*
 * order Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = order.Client.OpenAPIDateConverter;

namespace order.Model
{
    /// <summary>
    /// OrderDataPromotionInfo
    /// </summary>
    [DataContract(Name = "OrderDataPromotionInfo")]
    public partial class OrderDataPromotionInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDataPromotionInfo" /> class.
        /// </summary>
        /// <param name="promotionGrn">promotionGrn.</param>
        /// <param name="type">type.</param>
        /// <param name="additionalInfo">additionalInfo.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="amount">amount.</param>
        /// <param name="couponCode">couponCode.</param>
        /// <param name="vatAmount">vatAmount.</param>
        /// <param name="vatPercentage">vatPercentage.</param>
        /// <param name="vatInaccurate">vatInaccurate.</param>
        /// <param name="vatCalculated">vatCalculated.</param>
        public OrderDataPromotionInfo(string promotionGrn = default(string), string type = default(string), string additionalInfo = default(string), string name = default(string), string description = default(string), OrderMoney amount = default(OrderMoney), string couponCode = default(string), OrderMoney vatAmount = default(OrderMoney), float vatPercentage = default(float), bool vatInaccurate = default(bool), bool vatCalculated = default(bool))
        {
            this.PromotionGrn = promotionGrn;
            this.Type = type;
            this.AdditionalInfo = additionalInfo;
            this.Name = name;
            this.Description = description;
            this.Amount = amount;
            this.CouponCode = couponCode;
            this.VatAmount = vatAmount;
            this.VatPercentage = vatPercentage;
            this.VatInaccurate = vatInaccurate;
            this.VatCalculated = vatCalculated;
        }

        /// <summary>
        /// Gets or Sets PromotionGrn
        /// </summary>
        [DataMember(Name = "promotionGrn", EmitDefaultValue = false)]
        public string PromotionGrn { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalInfo
        /// </summary>
        [DataMember(Name = "additionalInfo", EmitDefaultValue = false)]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public OrderMoney Amount { get; set; }

        /// <summary>
        /// Gets or Sets CouponCode
        /// </summary>
        [DataMember(Name = "couponCode", EmitDefaultValue = false)]
        public string CouponCode { get; set; }

        /// <summary>
        /// Gets or Sets VatAmount
        /// </summary>
        [DataMember(Name = "vatAmount", EmitDefaultValue = false)]
        public OrderMoney VatAmount { get; set; }

        /// <summary>
        /// Gets or Sets VatPercentage
        /// </summary>
        [DataMember(Name = "vatPercentage", EmitDefaultValue = false)]
        public float VatPercentage { get; set; }

        /// <summary>
        /// Gets or Sets VatInaccurate
        /// </summary>
        [DataMember(Name = "vatInaccurate", EmitDefaultValue = true)]
        public bool VatInaccurate { get; set; }

        /// <summary>
        /// Gets or Sets VatCalculated
        /// </summary>
        [DataMember(Name = "vatCalculated", EmitDefaultValue = true)]
        public bool VatCalculated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDataPromotionInfo {\n");
            sb.Append("  PromotionGrn: ").Append(PromotionGrn).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  AdditionalInfo: ").Append(AdditionalInfo).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  CouponCode: ").Append(CouponCode).Append("\n");
            sb.Append("  VatAmount: ").Append(VatAmount).Append("\n");
            sb.Append("  VatPercentage: ").Append(VatPercentage).Append("\n");
            sb.Append("  VatInaccurate: ").Append(VatInaccurate).Append("\n");
            sb.Append("  VatCalculated: ").Append(VatCalculated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
