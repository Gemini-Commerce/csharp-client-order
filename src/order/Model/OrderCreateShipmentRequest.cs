/*
 * order Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = order.Client.OpenAPIDateConverter;

namespace order.Model
{
    /// <summary>
    /// OrderCreateShipmentRequest
    /// </summary>
    [DataContract(Name = "orderCreateShipmentRequest")]
    public partial class OrderCreateShipmentRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateShipmentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderCreateShipmentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateShipmentRequest" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId (required).</param>
        /// <param name="orderId">orderId (required).</param>
        /// <param name="items">items (required).</param>
        /// <param name="address">address (required).</param>
        /// <param name="fromAddress">fromAddress.</param>
        /// <param name="returnAddress">returnAddress.</param>
        /// <param name="tracking">tracking.</param>
        /// <param name="returnTracking">returnTracking.</param>
        /// <param name="code">code.</param>
        /// <param name="method">method.</param>
        public OrderCreateShipmentRequest(string tenantId = default(string), string orderId = default(string), List<OrderShipmentItem> items = default(List<OrderShipmentItem>), OrderPostalAddress address = default(OrderPostalAddress), OrderPostalAddress fromAddress = default(OrderPostalAddress), OrderPostalAddress returnAddress = default(OrderPostalAddress), List<ShipmentTracking> tracking = default(List<ShipmentTracking>), List<ShipmentTracking> returnTracking = default(List<ShipmentTracking>), string code = default(string), string method = default(string))
        {
            // to ensure "tenantId" is required (not null)
            if (tenantId == null)
            {
                throw new ArgumentNullException("tenantId is a required property for OrderCreateShipmentRequest and cannot be null");
            }
            this.TenantId = tenantId;
            // to ensure "orderId" is required (not null)
            if (orderId == null)
            {
                throw new ArgumentNullException("orderId is a required property for OrderCreateShipmentRequest and cannot be null");
            }
            this.OrderId = orderId;
            // to ensure "items" is required (not null)
            if (items == null)
            {
                throw new ArgumentNullException("items is a required property for OrderCreateShipmentRequest and cannot be null");
            }
            this.Items = items;
            // to ensure "address" is required (not null)
            if (address == null)
            {
                throw new ArgumentNullException("address is a required property for OrderCreateShipmentRequest and cannot be null");
            }
            this.Address = address;
            this.FromAddress = fromAddress;
            this.ReturnAddress = returnAddress;
            this.Tracking = tracking;
            this.ReturnTracking = returnTracking;
            this.Code = code;
            this.Method = method;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", IsRequired = true, EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name = "orderId", IsRequired = true, EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name = "items", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderShipmentItem> Items { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", IsRequired = true, EmitDefaultValue = true)]
        public OrderPostalAddress Address { get; set; }

        /// <summary>
        /// Gets or Sets FromAddress
        /// </summary>
        [DataMember(Name = "fromAddress", EmitDefaultValue = false)]
        public OrderPostalAddress FromAddress { get; set; }

        /// <summary>
        /// Gets or Sets ReturnAddress
        /// </summary>
        [DataMember(Name = "returnAddress", EmitDefaultValue = false)]
        public OrderPostalAddress ReturnAddress { get; set; }

        /// <summary>
        /// Gets or Sets Tracking
        /// </summary>
        [DataMember(Name = "tracking", EmitDefaultValue = false)]
        public List<ShipmentTracking> Tracking { get; set; }

        /// <summary>
        /// Gets or Sets ReturnTracking
        /// </summary>
        [DataMember(Name = "returnTracking", EmitDefaultValue = false)]
        public List<ShipmentTracking> ReturnTracking { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Method
        /// </summary>
        [DataMember(Name = "method", EmitDefaultValue = false)]
        public string Method { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCreateShipmentRequest {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  FromAddress: ").Append(FromAddress).Append("\n");
            sb.Append("  ReturnAddress: ").Append(ReturnAddress).Append("\n");
            sb.Append("  Tracking: ").Append(Tracking).Append("\n");
            sb.Append("  ReturnTracking: ").Append(ReturnTracking).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Method: ").Append(Method).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
